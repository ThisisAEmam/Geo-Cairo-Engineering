{"ast":null,"code":"var _jsxFileName = \"/media/Work/Front-End/0.REACT/geo-cairo/src/pages/LoginPage/LoginPage.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport classes from \"./LoginPage.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useSpring, animated, config } from \"react-spring\";\nimport LoginSignupLower from \"../../containers/LoginSignupLower/LoginSignupLower\";\nimport BackHomeButton from \"../../components/BackHomeButton/BackHomeButton\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\n\nconst LoginPage = props => {\n  const [email, setEmail] = useState(\"\");\n  const [emptyEmail, setEmptyEmail] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [emptyPassword, setEmptyPassword] = useState(false);\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n  const loginBtnRef = useRef();\n  const emailFieldRef = useRef();\n  const passwordFieldRef = useRef();\n  useEffect(() => {\n    if (email.length !== 0) {\n      setEmptyEmail(false);\n    }\n  }, [email]);\n  useEffect(() => {\n    if (password.length !== 0) {\n      setEmptyPassword(false);\n    }\n  }, [password]);\n\n  const showPasswordHandler = () => {\n    if (showPassword) {\n      passwordFieldRef.current.type = \"password\";\n      setShowPassword(false);\n    } else {\n      passwordFieldRef.current.type = \"text\";\n      setShowPassword(true);\n    }\n  };\n\n  const inputFocusHandler = type => {\n    document.getElementById(type).addEventListener(\"keyup\", e => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (email.length === 0 || password.length === 0) {\n      if (email.length === 0) {\n        setEmptyEmail(true);\n      } else {\n        setEmptyEmail(false);\n      }\n\n      if (password.length === 0) {\n        setEmptyPassword(true);\n      } else {\n        setEmptyPassword(false);\n      }\n    } else {\n      if (email !== \"test@test.test\" || password !== \"1234567\") {\n        setWrongCredentials(true);\n      } else {\n        setWrongCredentials(false);\n        alert(\"Logged in!\");\n      }\n    }\n  };\n\n  const showWrongCredentials = useSpring({\n    opacity: wrongCredentials ? 1 : 0,\n    config: config.gentle\n  });\n  return (\n    /*#__PURE__*/\n    // <div className={classes.LoginPage}>\n    //   <BackHomeButton />\n    //   <animated.div style={showWrongCredentials} className={classes.wrongCredentials}>\n    //     <span>Wrong Credentials! </span> You have entered wrong email or password.\n    //   </animated.div>\n    //   <div className={classes.loginContainer}>\n    //     <div className={classes.rightSide}>\n    //       <img src=\"/images/bg.jpg\" alt=\"img\" />\n    //       <div className={classes.overlay}></div>\n    //     </div>\n    //     <div className={classes.leftSide}>\n    //       <div className={classes.leftSideContainer}>\n    //         <img className={classes.logo} src=\"/images/logo.png\" alt=\"logo\" />\n    //         <div className={classes.inputsContainer}>\n    //           <input\n    //             className={[classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \")}\n    //             type=\"email\"\n    //             id=\"email\"\n    //             ref={emailFieldRef}\n    //             value={email.length === 0 ? \"\" : email}\n    //             onFocus={() => inputFocusHandler(\"email\")}\n    //             placeholder=\"Enter your email\"\n    //             onChange={(text) => setEmail(text.target.value)}\n    //           />\n    //           <div className={classes.passwordWithIcon}>\n    //             <input\n    //               className={[classes.passwordField, emptyPassword ? classes.emptyPassword : null].join(\" \")}\n    //               type=\"password\"\n    //               id=\"password\"\n    //               ref={passwordFieldRef}\n    //               value={password.length === 0 ? \"\" : password}\n    //               onFocus={() => inputFocusHandler(\"password\")}\n    //               placeholder=\"Enter your password\"\n    //               onChange={(text) => setPassword(text.target.value)}\n    //             />\n    //             <span className={classes.eyeIcon} onClick={showPasswordHandler}>\n    //               {showPassword ? <i className=\"fa fa-eye-slash\"></i> : <i className=\"fa fa-eye\"></i>}\n    //             </span>\n    //           </div>\n    //           <Link to=\"/forgetPassword\" className={classes.forgetPassword}>\n    //             Forget password?\n    //           </Link>\n    //           <p className={classes.submitButton} ref={loginBtnRef} onClick={submitHandler}>\n    //             Log in\n    //           </p>\n    //         </div>\n    //         <LoginSignupLower login />\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n    React.createElement(LSPageTemp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.leftSideContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.logo,\n      src: \"/images/logo.png\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inputsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: [classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \"),\n      type: \"email\",\n      id: \"email\",\n      ref: emailFieldRef,\n      value: email.length === 0 ? \"\" : email,\n      onFocus: () => inputFocusHandler(\"email\"),\n      placeholder: \"Enter your email\",\n      onChange: text => setEmail(text.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.passwordWithIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: [classes.passwordField, emptyPassword ? classes.emptyPassword : null].join(\" \"),\n      type: \"password\",\n      id: \"password\",\n      ref: passwordFieldRef,\n      value: password.length === 0 ? \"\" : password,\n      onFocus: () => inputFocusHandler(\"password\"),\n      placeholder: \"Enter your password\",\n      onChange: text => setPassword(text.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.eyeIcon,\n      onClick: showPasswordHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, showPassword ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-eye-slash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-eye\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 69\n      }\n    }))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/forgetPassword\",\n      className: classes.forgetPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \"Forget password?\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.submitButton,\n      ref: loginBtnRef,\n      onClick: submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"Log in\")), /*#__PURE__*/React.createElement(LoginSignupLower, {\n      login: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/media/Work/Front-End/0.REACT/geo-cairo/src/pages/LoginPage/LoginPage.js"],"names":["React","useState","useRef","useEffect","classes","Link","useSpring","animated","config","LoginSignupLower","BackHomeButton","LSPageTemp","LoginPage","props","email","setEmail","emptyEmail","setEmptyEmail","password","setPassword","showPassword","setShowPassword","emptyPassword","setEmptyPassword","wrongCredentials","setWrongCredentials","loginBtnRef","emailFieldRef","passwordFieldRef","length","showPasswordHandler","current","type","inputFocusHandler","document","getElementById","addEventListener","e","key","preventDefault","click","submitHandler","alert","showWrongCredentials","opacity","gentle","leftSideContainer","logo","inputsContainer","emailField","join","text","target","value","passwordWithIcon","passwordField","eyeIcon","forgetPassword","submitButton"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport classes from \"./LoginPage.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useSpring, animated, config } from \"react-spring\";\nimport LoginSignupLower from \"../../containers/LoginSignupLower/LoginSignupLower\";\nimport BackHomeButton from \"../../components/BackHomeButton/BackHomeButton\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\n\nconst LoginPage = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [emptyEmail, setEmptyEmail] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [emptyPassword, setEmptyPassword] = useState(false);\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n\n  const loginBtnRef = useRef();\n  const emailFieldRef = useRef();\n  const passwordFieldRef = useRef();\n\n  useEffect(() => {\n    if (email.length !== 0) {\n      setEmptyEmail(false);\n    }\n  }, [email]);\n\n  useEffect(() => {\n    if (password.length !== 0) {\n      setEmptyPassword(false);\n    }\n  }, [password]);\n\n  const showPasswordHandler = () => {\n    if (showPassword) {\n      passwordFieldRef.current.type = \"password\";\n      setShowPassword(false);\n    } else {\n      passwordFieldRef.current.type = \"text\";\n      setShowPassword(true);\n    }\n  };\n\n  const inputFocusHandler = (type) => {\n    document.getElementById(type).addEventListener(\"keyup\", (e) => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (email.length === 0 || password.length === 0) {\n      if (email.length === 0) {\n        setEmptyEmail(true);\n      } else {\n        setEmptyEmail(false);\n      }\n\n      if (password.length === 0) {\n        setEmptyPassword(true);\n      } else {\n        setEmptyPassword(false);\n      }\n    } else {\n      if (email !== \"test@test.test\" || password !== \"1234567\") {\n        setWrongCredentials(true);\n      } else {\n        setWrongCredentials(false);\n        alert(\"Logged in!\");\n      }\n    }\n  };\n\n  const showWrongCredentials = useSpring({\n    opacity: wrongCredentials ? 1 : 0,\n    config: config.gentle,\n  });\n\n  return (\n    // <div className={classes.LoginPage}>\n    //   <BackHomeButton />\n    //   <animated.div style={showWrongCredentials} className={classes.wrongCredentials}>\n    //     <span>Wrong Credentials! </span> You have entered wrong email or password.\n    //   </animated.div>\n    //   <div className={classes.loginContainer}>\n    //     <div className={classes.rightSide}>\n    //       <img src=\"/images/bg.jpg\" alt=\"img\" />\n    //       <div className={classes.overlay}></div>\n    //     </div>\n    //     <div className={classes.leftSide}>\n    //       <div className={classes.leftSideContainer}>\n    //         <img className={classes.logo} src=\"/images/logo.png\" alt=\"logo\" />\n    //         <div className={classes.inputsContainer}>\n    //           <input\n    //             className={[classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \")}\n    //             type=\"email\"\n    //             id=\"email\"\n    //             ref={emailFieldRef}\n    //             value={email.length === 0 ? \"\" : email}\n    //             onFocus={() => inputFocusHandler(\"email\")}\n    //             placeholder=\"Enter your email\"\n    //             onChange={(text) => setEmail(text.target.value)}\n    //           />\n    //           <div className={classes.passwordWithIcon}>\n    //             <input\n    //               className={[classes.passwordField, emptyPassword ? classes.emptyPassword : null].join(\" \")}\n    //               type=\"password\"\n    //               id=\"password\"\n    //               ref={passwordFieldRef}\n    //               value={password.length === 0 ? \"\" : password}\n    //               onFocus={() => inputFocusHandler(\"password\")}\n    //               placeholder=\"Enter your password\"\n    //               onChange={(text) => setPassword(text.target.value)}\n    //             />\n    //             <span className={classes.eyeIcon} onClick={showPasswordHandler}>\n    //               {showPassword ? <i className=\"fa fa-eye-slash\"></i> : <i className=\"fa fa-eye\"></i>}\n    //             </span>\n    //           </div>\n    //           <Link to=\"/forgetPassword\" className={classes.forgetPassword}>\n    //             Forget password?\n    //           </Link>\n    //           <p className={classes.submitButton} ref={loginBtnRef} onClick={submitHandler}>\n    //             Log in\n    //           </p>\n    //         </div>\n    //         <LoginSignupLower login />\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n    <LSPageTemp>\n      <div className={classes.leftSideContainer}>\n        <img className={classes.logo} src=\"/images/logo.png\" alt=\"logo\" />\n        <div className={classes.inputsContainer}>\n          <input\n            className={[classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \")}\n            type=\"email\"\n            id=\"email\"\n            ref={emailFieldRef}\n            value={email.length === 0 ? \"\" : email}\n            onFocus={() => inputFocusHandler(\"email\")}\n            placeholder=\"Enter your email\"\n            onChange={(text) => setEmail(text.target.value)}\n          />\n          <div className={classes.passwordWithIcon}>\n            <input\n              className={[classes.passwordField, emptyPassword ? classes.emptyPassword : null].join(\" \")}\n              type=\"password\"\n              id=\"password\"\n              ref={passwordFieldRef}\n              value={password.length === 0 ? \"\" : password}\n              onFocus={() => inputFocusHandler(\"password\")}\n              placeholder=\"Enter your password\"\n              onChange={(text) => setPassword(text.target.value)}\n            />\n            <span className={classes.eyeIcon} onClick={showPasswordHandler}>\n              {showPassword ? <i className=\"fa fa-eye-slash\"></i> : <i className=\"fa fa-eye\"></i>}\n            </span>\n          </div>\n          <Link to=\"/forgetPassword\" className={classes.forgetPassword}>\n            Forget password?\n          </Link>\n          <p className={classes.submitButton} ref={loginBtnRef} onClick={submitHandler}>\n            Log in\n          </p>\n        </div>\n        <LoginSignupLower login />\n      </div>\n    </LSPageTemp>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}