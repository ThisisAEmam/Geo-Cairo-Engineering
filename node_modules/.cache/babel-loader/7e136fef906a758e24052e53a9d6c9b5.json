{"ast":null,"code":"import _slicedToArray from\"/media/Work/Front-End/0. REACT/cra-redux-toolkit-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{create,edit,toggleComplete,remove}from\"./todoSlice\";var Todo=function Todo(){var todo=useSelector(function(state){return state.todo;});var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var dispatch=useDispatch(todo);var handleSubmit=function handleSubmit(e){e.preventDefault();dispatch(create(inputText));setInputText(\"\");};var handleDelete=function handleDelete(todoItem){return function(){dispatch(remove(todoItem));};};var handleEdit=function handleEdit(todoItemId){return function(){dispatch(edit({id:todoItemId,description:inputText}));setInputText(\"\");};};var handleToggle=function handleToggle(todoItem){return function(){dispatch(toggleComplete(todoItem));};};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"input\",{value:inputText,onChange:function onChange(e){return setInputText(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Create Todo\")),todo.map(function(todoItem){return/*#__PURE__*/React.createElement(\"div\",{key:todoItem.id},todoItem.description,\" \",todoItem.isComplete?\"(DONE)\":\"\",/*#__PURE__*/React.createElement(\"button\",{onClick:handleDelete(todoItem)},\"Delete\"),/*#__PURE__*/React.createElement(\"button\",{onClick:handleEdit(todoItem.id)},\"Edit\"),/*#__PURE__*/React.createElement(\"button\",{onClick:handleToggle(todoItem)},\"Toggle Complete\"));}));};export default Todo;","map":{"version":3,"sources":["/media/Work/Front-End/0. REACT/cra-redux-toolkit-starter/src/features/todo/Todo.js"],"names":["React","useState","useSelector","useDispatch","create","edit","toggleComplete","remove","Todo","todo","state","inputText","setInputText","dispatch","handleSubmit","e","preventDefault","handleDelete","todoItem","handleEdit","todoItemId","id","description","handleToggle","target","value","map","isComplete"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,cAAvB,CAAuCC,MAAvC,KAAqD,aAArD,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAMC,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CADiB,cAEiBR,QAAQ,CAAC,EAAD,CAFzB,wCAEVU,SAFU,eAECC,YAFD,eAGjB,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,CAACM,IAAD,CAA5B,CAEA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GAEAH,QAAQ,CAACT,MAAM,CAACO,SAAD,CAAP,CAAR,CAEAC,YAAY,CAAC,EAAD,CAAZ,CACD,CAND,CAQA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,QAAc,WAAM,CACvCL,QAAQ,CAACN,MAAM,CAACW,QAAD,CAAP,CAAR,CACD,CAFoB,EAArB,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,QAAgB,WAAM,CACvCP,QAAQ,CAACR,IAAI,CAAC,CACZgB,EAAE,CAAED,UADQ,CAEZE,WAAW,CAAEX,SAFD,CAAD,CAAL,CAAR,CAIAC,YAAY,CAAC,EAAD,CAAZ,CACD,CANkB,EAAnB,CAQA,GAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACL,QAAD,QAAc,WAAM,CACvCL,QAAQ,CAACP,cAAc,CAACY,QAAD,CAAf,CAAR,CACD,CAFoB,EAArB,CAIA,mBACE,4CACE,4BAAM,QAAQ,CAAEJ,YAAhB,eACE,6BAAO,KAAK,CAAEH,SAAd,CAAyB,QAAQ,CAAE,kBAACI,CAAD,QAAOH,CAAAA,YAAY,CAACG,CAAC,CAACS,MAAF,CAASC,KAAV,CAAnB,EAAnC,EADF,cAEE,8BAAQ,IAAI,CAAC,QAAb,gBAFF,CADF,CAKGhB,IAAI,CAACiB,GAAL,CAAS,SAACR,QAAD,qBACR,2BAAK,GAAG,CAAEA,QAAQ,CAACG,EAAnB,EACGH,QAAQ,CAACI,WADZ,KAC0BJ,QAAQ,CAACS,UAAT,CAAsB,QAAtB,CAAiC,EAD3D,cAEE,8BAAQ,OAAO,CAAEV,YAAY,CAACC,QAAD,CAA7B,WAFF,cAGE,8BAAQ,OAAO,CAAEC,UAAU,CAACD,QAAQ,CAACG,EAAV,CAA3B,SAHF,cAIE,8BAAQ,OAAO,CAAEE,YAAY,CAACL,QAAD,CAA7B,oBAJF,CADQ,EAAT,CALH,CADF,CAgBD,CA7CD,CA+CA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { create, edit, toggleComplete, remove } from \"./todoSlice\";\n\nconst Todo = () => {\n  const todo = useSelector((state) => state.todo);\n  const [inputText, setInputText] = useState(\"\");\n  const dispatch = useDispatch(todo);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(create(inputText));\n\n    setInputText(\"\");\n  };\n\n  const handleDelete = (todoItem) => () => {\n    dispatch(remove(todoItem));\n  };\n\n  const handleEdit = (todoItemId) => () => {\n    dispatch(edit({\n      id: todoItemId,\n      description: inputText\n    }));\n    setInputText(\"\");\n  };\n\n  const handleToggle = (todoItem) => () => {\n    dispatch(toggleComplete(todoItem));\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input value={inputText} onChange={(e) => setInputText(e.target.value)} />\n        <button type=\"submit\">Create Todo</button>\n      </form>\n      {todo.map((todoItem) => (\n        <div key={todoItem.id}>\n          {todoItem.description} {todoItem.isComplete ? \"(DONE)\" : \"\"}\n          <button onClick={handleDelete(todoItem)}>Delete</button>\n          <button onClick={handleEdit(todoItem.id)}>Edit</button>\n          <button onClick={handleToggle(todoItem)}>Toggle Complete</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}