{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet todoId = 1;\nexport const slice = createSlice({\n  name: \"todo\",\n  initialState: [],\n  reducers: {\n    create: (state, action) => {\n      state.push({\n        id: todoId,\n        description: action.payload,\n        isComplete: false\n      });\n      todoId++;\n    },\n    edit: (state, action) => {\n      const todoToEdit = state.find(todo => todo.id === action.payload.id);\n\n      if (todoToEdit) {\n        todoToEdit.description = action.payload.description;\n      }\n    },\n    toggleComplete: (state, action) => {\n      const todoToToggle = state.find(todo => todo.id === action.payload.id);\n\n      if (todoToToggle) {\n        todoToToggle.isComplete = !todoToToggle.isComplete;\n      }\n    },\n    remove: (state, action) => {\n      const deleteIndex = state.findIndex(todo => todo.id === action.payload.id);\n\n      if (deleteIndex !== -1) {\n        state.splice(deleteIndex, 1);\n      }\n    }\n  }\n});\nexport const {\n  create,\n  edit,\n  toggleComplete,\n  remove\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/media/Work/Front-End/0.REACT/geo-cairo/src/features/todo/todoSlice.js"],"names":["createSlice","todoId","slice","name","initialState","reducers","create","state","action","push","id","description","payload","isComplete","edit","todoToEdit","find","todo","toggleComplete","todoToToggle","remove","deleteIndex","findIndex","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAIC,MAAM,GAAG,CAAb;AAEA,OAAO,MAAMC,KAAK,GAAGF,WAAW,CAAC;AAC/BG,EAAAA,IAAI,EAAE,MADyB;AAE/BC,EAAAA,YAAY,EAAE,EAFiB;AAG/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAET,MADK;AAETU,QAAAA,WAAW,EAAEH,MAAM,CAACI,OAFX;AAGTC,QAAAA,UAAU,EAAE;AAHH,OAAX;AAMAZ,MAAAA,MAAM;AACP,KATO;AAURa,IAAAA,IAAI,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACvB,YAAMO,UAAU,GAAGR,KAAK,CAACS,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYF,MAAM,CAACI,OAAP,CAAeF,EAAhD,CAAnB;;AACA,UAAIK,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACJ,WAAX,GAAyBH,MAAM,CAACI,OAAP,CAAeD,WAAxC;AACD;AACF,KAfO;AAgBRO,IAAAA,cAAc,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACjC,YAAMW,YAAY,GAAGZ,KAAK,CAACS,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYF,MAAM,CAACI,OAAP,CAAeF,EAAhD,CAArB;;AACA,UAAIS,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACN,UAAb,GAA0B,CAACM,YAAY,CAACN,UAAxC;AACD;AACF,KArBO;AAsBRO,IAAAA,MAAM,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AACzB,YAAMa,WAAW,GAAGd,KAAK,CAACe,SAAN,CAAiBL,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYF,MAAM,CAACI,OAAP,CAAeF,EAArD,CAApB;;AACA,UAAIW,WAAW,KAAK,CAAC,CAArB,EAAwB;AACtBd,QAAAA,KAAK,CAACgB,MAAN,CAAaF,WAAb,EAA0B,CAA1B;AACD;AACF;AA3BO;AAHqB,CAAD,CAAzB;AAkCP,OAAO,MAAM;AAAEf,EAAAA,MAAF;AAAUQ,EAAAA,IAAV;AAAgBI,EAAAA,cAAhB;AAAgCE,EAAAA;AAAhC,IAA2ClB,KAAK,CAACsB,OAAvD;AAEP,eAAetB,KAAK,CAACuB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nlet todoId = 1;\n\nexport const slice = createSlice({\n  name: \"todo\",\n  initialState: [],\n  reducers: {\n    create: (state, action) => {\n      state.push({\n        id: todoId,\n        description: action.payload,\n        isComplete: false,\n      });\n\n      todoId++;\n    },\n    edit: (state, action) => {\n      const todoToEdit = state.find((todo) => todo.id === action.payload.id);\n      if (todoToEdit) {\n        todoToEdit.description = action.payload.description;\n      }\n    },\n    toggleComplete: (state, action) => {\n      const todoToToggle = state.find((todo) => todo.id === action.payload.id);\n      if (todoToToggle) {\n        todoToToggle.isComplete = !todoToToggle.isComplete;\n      }\n    },\n    remove: (state, action) => {\n      const deleteIndex = state.findIndex((todo) => todo.id === action.payload.id);\n      if (deleteIndex !== -1) {\n        state.splice(deleteIndex, 1);\n      }\n    },\n  },\n});\n\nexport const { create, edit, toggleComplete, remove } = slice.actions;\n\nexport default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}