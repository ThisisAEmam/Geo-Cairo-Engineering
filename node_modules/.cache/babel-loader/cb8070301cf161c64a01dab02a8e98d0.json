{"ast":null,"code":"var _jsxFileName = \"/media/Work/Front-End/0.REACT/geo-cairo/src/pages/ForgetPasswordPage/ForgetPasswordPage.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\nimport classes from \"./ForgetPasswordPage.module.css\";\n\nconst ForgetPasswordPage = props => {\n  const [email, setEmail] = useState(\"\");\n  const [emptyEmail, setEmptyEmail] = useState(false);\n  const loginBtnRef = useRef();\n  const emailFieldRef = useRef();\n  useEffect(() => {\n    if (email.length !== 0) {\n      setEmptyEmail(false);\n    }\n  }, [email]);\n\n  const inputFocusHandler = () => {\n    document.getElementById(\"email\").addEventListener(\"keyup\", e => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (email.length === 0) {\n      setEmptyEmail(true);\n    } else {}\n  };\n\n  const backHandler = () => {};\n\n  return /*#__PURE__*/React.createElement(LSPageTemp, {\n    fixedLogo: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Enter your email address to reset your password.\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: [classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \"),\n    type: \"email\",\n    id: \"email\",\n    ref: emailFieldRef,\n    value: email.length === 0 ? \"\" : email,\n    onFocus: inputFocusHandler,\n    placeholder: \"Enter your email\",\n    onChange: text => setEmail(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.navButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.backButton,\n    onClick: backHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.submitButton,\n    ref: loginBtnRef,\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Send me a recovery link\"))));\n};\n\nexport default ForgetPasswordPage;","map":{"version":3,"sources":["/media/Work/Front-End/0.REACT/geo-cairo/src/pages/ForgetPasswordPage/ForgetPasswordPage.js"],"names":["React","useState","useRef","useEffect","LSPageTemp","classes","ForgetPasswordPage","props","email","setEmail","emptyEmail","setEmptyEmail","loginBtnRef","emailFieldRef","length","inputFocusHandler","document","getElementById","addEventListener","e","key","preventDefault","current","click","submitHandler","backHandler","content","title","text","emailField","join","target","value","navButtons","backButton","submitButton"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\nimport classes from \"./ForgetPasswordPage.module.css\";\n\nconst ForgetPasswordPage = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [emptyEmail, setEmptyEmail] = useState(false);\n\n  const loginBtnRef = useRef();\n  const emailFieldRef = useRef();\n\n  useEffect(() => {\n    if (email.length !== 0) {\n      setEmptyEmail(false);\n    }\n  }, [email]);\n\n  const inputFocusHandler = () => {\n    document.getElementById(\"email\").addEventListener(\"keyup\", (e) => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (email.length === 0) {\n      setEmptyEmail(true);\n    } else {\n    }\n  };\n\n  const backHandler = () => {};\n\n  return (\n    <LSPageTemp fixedLogo>\n      <div className={classes.content}>\n        <h1 className={classes.title}>Forgot Password?</h1>\n        <p className={classes.text}>Enter your email address to reset your password.</p>\n        <input\n          className={[classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \")}\n          type=\"email\"\n          id=\"email\"\n          ref={emailFieldRef}\n          value={email.length === 0 ? \"\" : email}\n          onFocus={inputFocusHandler}\n          placeholder=\"Enter your email\"\n          onChange={(text) => setEmail(text.target.value)}\n        />\n        <div className={classes.navButtons}>\n          <p className={classes.backButton} onClick={backHandler}>\n            Back\n          </p>\n          <p className={classes.submitButton} ref={loginBtnRef} onClick={submitHandler}>\n            Send me a recovery link\n          </p>\n        </div>\n      </div>\n    </LSPageTemp>\n  );\n};\n\nexport default ForgetPasswordPage;\n"]},"metadata":{},"sourceType":"module"}