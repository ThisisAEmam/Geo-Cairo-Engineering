{"ast":null,"code":"var _jsxFileName = \"/media/Work/Front-End/0.REACT/geo-cairo/src/pages/ResetPasswordPage/ResetPasswordPage.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\nimport classes from \"./ResetPasswordPage.module.css\";\n\nconst ResetPasswordPage = props => {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [emptyConfirmPassword, setEmptyConfirmPassword] = useState(false);\n  const [emptyPassword, setEmptyPassword] = useState(false);\n  const [notMatched, setNotMatched] = useState(false);\n  const [content, setContent] = useState(1);\n  const loginBtnRef = useRef();\n  const passwordFieldRef = useRef();\n  const confirmPasswordFieldRef = useRef();\n  const {\n    id,\n    token\n  } = useParams();\n  useEffect(() => {\n    if (password.length !== 0) {\n      setEmptyPassword(false);\n    }\n  }, [password]);\n  useEffect(() => {\n    if (confirmPassword.length !== 0) {\n      setEmptyConfirmPassword(false);\n    }\n  }, [confirmPassword]);\n\n  const showPasswordHandler = type => {\n    if (type === \"password\") {\n      if (showPassword) {\n        passwordFieldRef.current.type = \"password\";\n        setShowPassword(false);\n      } else {\n        passwordFieldRef.current.type = \"text\";\n        setShowPassword(true);\n      }\n    } else if (type === \"confirmPassword\") {\n      if (showConfirmPassword) {\n        confirmPasswordFieldRef.current.type = \"password\";\n        setShowConfirmPassword(false);\n      } else {\n        confirmPasswordFieldRef.current.type = \"text\";\n        setShowConfirmPassword(true);\n      }\n    }\n  };\n\n  const inputFocusHandler = type => {\n    document.getElementById(type).addEventListener(\"keyup\", e => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (password.length === 0 || confirmPassword.length === 0) {\n      if (password.length === 0) setEmptyPassword(true);\n      if (confirmPassword.length === 0) setEmptyConfirmPassword(true);\n    } else {\n      if (password !== confirmPassword) setNotMatched(true);else setContent(2);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(LSPageTemp, {\n    fixedLogo: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, content === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Enter your new password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.passwordWithIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: [classes.passwordField, emptyPassword ? classes.emptyPassword : null].join(\" \"),\n    type: \"password\",\n    id: \"password\",\n    ref: passwordFieldRef,\n    value: password.length === 0 ? \"\" : password,\n    onFocus: () => inputFocusHandler(\"password\"),\n    placeholder: \"Enter your password (at least 8 characters)\",\n    onChange: text => setPassword(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.eyeIcon,\n    onClick: () => showPasswordHandler(\"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, showPassword ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-eye-slash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 69\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.passwordWithIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: [classes.passwordField, emptyConfirmPassword ? classes.emptyPassword : null].join(\" \"),\n    type: \"password\",\n    id: \"confirmPassword\",\n    ref: confirmPasswordFieldRef,\n    value: confirmPassword.length === 0 ? \"\" : confirmPassword,\n    onFocus: () => inputFocusHandler(\"confirmPassword\"),\n    placeholder: \"Comfirm your password\",\n    onChange: text => setConfirmPassword(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.eyeIcon,\n    onClick: () => showPasswordHandler(\"confirmPassword\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, showConfirmPassword ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-eye-slash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 76\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.navButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.submitButton,\n    ref: loginBtnRef,\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Submit\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.textTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Your password has been changed successfully!\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: classes.backButtonTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Back Home\")));\n};\n\nexport default ResetPasswordPage;","map":{"version":3,"sources":["/media/Work/Front-End/0.REACT/geo-cairo/src/pages/ResetPasswordPage/ResetPasswordPage.js"],"names":["React","useState","useRef","useEffect","Link","useParams","LSPageTemp","classes","ResetPasswordPage","props","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","emptyConfirmPassword","setEmptyConfirmPassword","emptyPassword","setEmptyPassword","notMatched","setNotMatched","content","setContent","loginBtnRef","passwordFieldRef","confirmPasswordFieldRef","id","token","length","showPasswordHandler","type","current","inputFocusHandler","document","getElementById","addEventListener","e","key","preventDefault","click","submitHandler","title","text","passwordWithIcon","passwordField","join","target","value","eyeIcon","navButtons","submitButton","contentTwo","textTwo","backButtonTwo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\nimport classes from \"./ResetPasswordPage.module.css\";\n\nconst ResetPasswordPage = (props) => {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [emptyConfirmPassword, setEmptyConfirmPassword] = useState(false);\n  const [emptyPassword, setEmptyPassword] = useState(false);\n  const [notMatched, setNotMatched] = useState(false);\n  const [content, setContent] = useState(1);\n\n  const loginBtnRef = useRef();\n  const passwordFieldRef = useRef();\n  const confirmPasswordFieldRef = useRef();\n\n  const { id, token } = useParams();\n\n  useEffect(() => {\n    if (password.length !== 0) {\n      setEmptyPassword(false);\n    }\n  }, [password]);\n\n  useEffect(() => {\n    if (confirmPassword.length !== 0) {\n      setEmptyConfirmPassword(false);\n    }\n  }, [confirmPassword]);\n\n  const showPasswordHandler = (type) => {\n    if (type === \"password\") {\n      if (showPassword) {\n        passwordFieldRef.current.type = \"password\";\n        setShowPassword(false);\n      } else {\n        passwordFieldRef.current.type = \"text\";\n        setShowPassword(true);\n      }\n    } else if (type === \"confirmPassword\") {\n      if (showConfirmPassword) {\n        confirmPasswordFieldRef.current.type = \"password\";\n        setShowConfirmPassword(false);\n      } else {\n        confirmPasswordFieldRef.current.type = \"text\";\n        setShowConfirmPassword(true);\n      }\n    }\n  };\n\n  const inputFocusHandler = (type) => {\n    document.getElementById(type).addEventListener(\"keyup\", (e) => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (password.length === 0 || confirmPassword.length === 0) {\n      if (password.length === 0) setEmptyPassword(true);\n      if (confirmPassword.length === 0) setEmptyConfirmPassword(true);\n    } else {\n      if (password !== confirmPassword) setNotMatched(true);\n      else setContent(2);\n    }\n  };\n\n  return (\n    <LSPageTemp fixedLogo>\n      {content === 1 ? (\n        <div className={classes.content}>\n          <h1 className={classes.title}>Reset Password</h1>\n          <p className={classes.text}>Enter your new password</p>\n          <div className={classes.passwordWithIcon}>\n            <input\n              className={[classes.passwordField, emptyPassword ? classes.emptyPassword : null].join(\" \")}\n              type=\"password\"\n              id=\"password\"\n              ref={passwordFieldRef}\n              value={password.length === 0 ? \"\" : password}\n              onFocus={() => inputFocusHandler(\"password\")}\n              placeholder=\"Enter your password (at least 8 characters)\"\n              onChange={(text) => setPassword(text.target.value)}\n            />\n            <span className={classes.eyeIcon} onClick={() => showPasswordHandler(\"password\")}>\n              {showPassword ? <i className=\"fa fa-eye-slash\"></i> : <i className=\"fa fa-eye\"></i>}\n            </span>\n            {/* <p>Your password is invalid.</p> */}\n          </div>\n          <div className={classes.passwordWithIcon}>\n            <input\n              className={[classes.passwordField, emptyConfirmPassword ? classes.emptyPassword : null].join(\" \")}\n              type=\"password\"\n              id=\"confirmPassword\"\n              ref={confirmPasswordFieldRef}\n              value={confirmPassword.length === 0 ? \"\" : confirmPassword}\n              onFocus={() => inputFocusHandler(\"confirmPassword\")}\n              placeholder=\"Comfirm your password\"\n              onChange={(text) => setConfirmPassword(text.target.value)}\n            />\n            <span className={classes.eyeIcon} onClick={() => showPasswordHandler(\"confirmPassword\")}>\n              {showConfirmPassword ? <i className=\"fa fa-eye-slash\"></i> : <i className=\"fa fa-eye\"></i>}\n            </span>\n            {/* <p>Your password is invalid.</p> */}\n          </div>\n          <div className={classes.navButtons}>\n            <p className={classes.submitButton} ref={loginBtnRef} onClick={submitHandler}>\n              Submit\n            </p>\n          </div>\n        </div>\n      ) : (\n        <div className={classes.contentTwo}>\n          <p className={classes.textTwo}>Your password has been changed successfully!</p>\n          <Link to=\"/\" className={classes.backButtonTwo}>\n            Back Home\n          </Link>\n        </div>\n      )}\n    </LSPageTemp>\n  );\n};\n\nexport default ResetPasswordPage;\n"]},"metadata":{},"sourceType":"module"}