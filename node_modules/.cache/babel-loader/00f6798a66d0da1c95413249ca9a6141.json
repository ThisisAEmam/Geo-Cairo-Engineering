{"ast":null,"code":"var _jsxFileName = \"/media/Work/Front-End/0.REACT/geo-cairo/src/components/SignupPlanCard/SignupPlanCard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classes from \"./SignupPlanCard.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSignupInfo } from \"../../features/signupInfoSlice\";\nimport { useSpring, animated, config } from \"react-spring\";\n\nconst SignupPlanCard = props => {\n  const {\n    signupInfo\n  } = useSelector(state => state);\n  const [selected, setSelected] = useState(false);\n  useEffect(() => {\n    if (signupInfo.plan === props.planName) {\n      setSelected(true);\n    } else {\n      setSelected(false);\n    }\n\n    if (signupInfo.plan === \"\" && props.planName === \"Free\") {\n      setSelected(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [signupInfo]);\n  const dispatch = useDispatch(setSignupInfo);\n\n  const clickHandler = () => {\n    setSelected(true);\n    const signupDict = { ...signupInfo\n    };\n    signupDict.plan = props.planName;\n    dispatch(setSignupInfo(signupDict));\n  };\n\n  const transformAnim = useSpring({\n    opacity: selected ? 1 : 0.5,\n    config: config.default\n  });\n  return /*#__PURE__*/React.createElement(animated.div, {\n    style: transformAnim,\n    className: [classes.SignupPlanCard, selected ? classes.selected : null].join(\" \"),\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.planName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, props.planName), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, props.price, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }\n  }, \"EGP/mo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.features,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, props.features.map((feature, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, feature))));\n};\n\nexport default SignupPlanCard;","map":{"version":3,"sources":["/media/Work/Front-End/0.REACT/geo-cairo/src/components/SignupPlanCard/SignupPlanCard.js"],"names":["React","useEffect","useState","classes","useDispatch","useSelector","setSignupInfo","useSpring","animated","config","SignupPlanCard","props","signupInfo","state","selected","setSelected","plan","planName","dispatch","clickHandler","signupDict","transformAnim","opacity","default","join","price","features","map","feature","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,cAA5C;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAiBP,WAAW,CAAEQ,KAAD,IAAWA,KAAZ,CAAlC;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,UAAU,CAACI,IAAX,KAAoBL,KAAK,CAACM,QAA9B,EAAwC;AACtCF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,QAAIH,UAAU,CAACI,IAAX,KAAoB,EAApB,IAA0BL,KAAK,CAACM,QAAN,KAAmB,MAAjD,EAAyD;AACvDF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KATa,CAWd;;AACD,GAZQ,EAYN,CAACH,UAAD,CAZM,CAAT;AAcA,QAAMM,QAAQ,GAAGd,WAAW,CAACE,aAAD,CAA5B;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACzBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AAEA,UAAMK,UAAU,GAAG,EAAE,GAAGR;AAAL,KAAnB;AACAQ,IAAAA,UAAU,CAACJ,IAAX,GAAkBL,KAAK,CAACM,QAAxB;AAEAC,IAAAA,QAAQ,CAACZ,aAAa,CAACc,UAAD,CAAd,CAAR;AACD,GAPD;;AASA,QAAMC,aAAa,GAAGd,SAAS,CAAC;AAC9Be,IAAAA,OAAO,EAAER,QAAQ,GAAG,CAAH,GAAO,GADM;AAE9BL,IAAAA,MAAM,EAAEA,MAAM,CAACc;AAFe,GAAD,CAA/B;AAKA,sBACE,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEF,aAArB;AAAoC,IAAA,SAAS,EAAE,CAAClB,OAAO,CAACO,cAAT,EAAyBI,QAAQ,GAAGX,OAAO,CAACW,QAAX,GAAsB,IAAvD,EAA6DU,IAA7D,CAAkE,GAAlE,CAA/C;AAAuH,IAAA,OAAO,EAAEL,YAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEhB,OAAO,CAACc,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCN,KAAK,CAACM,QAAxC,CADF,eAEE;AAAG,IAAA,SAAS,EAAEd,OAAO,CAACsB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACc,KADT,oBACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,CAFF,eAKE;AAAI,IAAA,SAAS,EAAEtB,OAAO,CAACuB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,CAACe,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,KAAV,kBAClB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,OAAjB,CADD,CADH,CALF,CADF;AAaD,CAhDD;;AAkDA,eAAelB,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classes from \"./SignupPlanCard.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSignupInfo } from \"../../features/signupInfoSlice\";\nimport { useSpring, animated, config } from \"react-spring\";\n\nconst SignupPlanCard = (props) => {\n  const { signupInfo } = useSelector((state) => state);\n\n  const [selected, setSelected] = useState(false);\n\n  useEffect(() => {\n    if (signupInfo.plan === props.planName) {\n      setSelected(true);\n    } else {\n      setSelected(false);\n    }\n\n    if (signupInfo.plan === \"\" && props.planName === \"Free\") {\n      setSelected(true);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [signupInfo]);\n\n  const dispatch = useDispatch(setSignupInfo);\n\n  const clickHandler = () => {\n    setSelected(true);\n\n    const signupDict = { ...signupInfo };\n    signupDict.plan = props.planName;\n\n    dispatch(setSignupInfo(signupDict));\n  };\n\n  const transformAnim = useSpring({\n    opacity: selected ? 1 : 0.5,\n    config: config.default,\n  });\n\n  return (\n    <animated.div style={transformAnim} className={[classes.SignupPlanCard, selected ? classes.selected : null].join(\" \")} onClick={clickHandler}>\n      <h3 className={classes.planName}>{props.planName}</h3>\n      <p className={classes.price}>\n        {props.price} <span>EGP/mo</span>\n      </p>\n      <ul className={classes.features}>\n        {props.features.map((feature, index) => (\n          <li key={index}>{feature}</li>\n        ))}\n      </ul>\n    </animated.div>\n  );\n};\n\nexport default SignupPlanCard;\n"]},"metadata":{},"sourceType":"module"}