{"ast":null,"code":"var _jsxFileName = \"/media/Work/Front-End/0.REACT/geo-cairo/src/pages/ForgetPasswordPage/ForgetPasswordPage.js\";\nimport React, { useState, useRef } from \"react\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\nimport classes from \"./ForgetPasswordPage.module.css\";\n\nconst ForgetPasswordPage = props => {\n  const [email, setEmail] = useState(\"\");\n  const [emptyEmail, setEmptyEmail] = useState(false);\n  const loginBtnRef = useRef();\n  const emailFieldRef = useRef();\n\n  const inputFocusHandler = () => {\n    document.getElementById(\"email\").addEventListener(\"keyup\", e => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (email.length === 0) {\n      setEmptyEmail(true);\n    } else {}\n  };\n\n  return /*#__PURE__*/React.createElement(LSPageTemp, {\n    fixedLogo: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: [classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \"),\n    type: \"email\",\n    id: \"email\",\n    ref: emailFieldRef,\n    value: email.length === 0 ? \"\" : email,\n    onFocus: inputFocusHandler,\n    placeholder: \"Enter your email\",\n    onChange: text => setEmail(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.submitButton,\n    ref: loginBtnRef,\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Log in\"));\n};\n\nexport default ForgetPasswordPage;","map":{"version":3,"sources":["/media/Work/Front-End/0.REACT/geo-cairo/src/pages/ForgetPasswordPage/ForgetPasswordPage.js"],"names":["React","useState","useRef","LSPageTemp","classes","ForgetPasswordPage","props","email","setEmail","emptyEmail","setEmptyEmail","loginBtnRef","emailFieldRef","inputFocusHandler","document","getElementById","addEventListener","e","key","preventDefault","current","click","submitHandler","length","emailField","join","text","target","value","submitButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMU,WAAW,GAAGT,MAAM,EAA1B;AACA,QAAMU,aAAa,GAAGV,MAAM,EAA5B;;AAEA,QAAMW,iBAAiB,GAAG,MAAM;AAC9BC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,gBAAjC,CAAkD,OAAlD,EAA4DC,CAAD,IAAO;AAChE,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBD,QAAAA,CAAC,CAACE,cAAF;AACAR,QAAAA,WAAW,CAACS,OAAZ,CAAoBC,KAApB;AACD;AACF,KALD;AAMD,GAPD;;AASA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIf,KAAK,CAACgB,MAAN,KAAiB,CAArB,EAAwB;AACtBb,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO,CACN;AACF,GALD;;AAOA,sBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAE,CAACN,OAAO,CAACoB,UAAT,EAAqBf,UAAU,GAAGL,OAAO,CAACK,UAAX,GAAwB,IAAvD,EAA6DgB,IAA7D,CAAkE,GAAlE,CADb;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,GAAG,EAAEb,aAJP;AAKE,IAAA,KAAK,EAAEL,KAAK,CAACgB,MAAN,KAAiB,CAAjB,GAAqB,EAArB,GAA0BhB,KALnC;AAME,IAAA,OAAO,EAAEM,iBANX;AAOE,IAAA,WAAW,EAAC,kBAPd;AAQE,IAAA,QAAQ,EAAGa,IAAD,IAAUlB,QAAQ,CAACkB,IAAI,CAACC,MAAL,CAAYC,KAAb,CAR9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE;AAAG,IAAA,SAAS,EAAExB,OAAO,CAACyB,YAAtB;AAAoC,IAAA,GAAG,EAAElB,WAAzC;AAAsD,IAAA,OAAO,EAAEW,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;AAiBD,CAxCD;;AA0CA,eAAejB,kBAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport LSPageTemp from \"../../containers/LSPageTemp/LSPageTemp\";\nimport classes from \"./ForgetPasswordPage.module.css\";\n\nconst ForgetPasswordPage = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [emptyEmail, setEmptyEmail] = useState(false);\n\n  const loginBtnRef = useRef();\n  const emailFieldRef = useRef();\n\n  const inputFocusHandler = () => {\n    document.getElementById(\"email\").addEventListener(\"keyup\", (e) => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        loginBtnRef.current.click();\n      }\n    });\n  };\n\n  const submitHandler = () => {\n    if (email.length === 0) {\n      setEmptyEmail(true);\n    } else {\n    }\n  };\n\n  return (\n    <LSPageTemp fixedLogo>\n      <input\n        className={[classes.emailField, emptyEmail ? classes.emptyEmail : null].join(\" \")}\n        type=\"email\"\n        id=\"email\"\n        ref={emailFieldRef}\n        value={email.length === 0 ? \"\" : email}\n        onFocus={inputFocusHandler}\n        placeholder=\"Enter your email\"\n        onChange={(text) => setEmail(text.target.value)}\n      />\n      <p className={classes.submitButton} ref={loginBtnRef} onClick={submitHandler}>\n        Log in\n      </p>\n    </LSPageTemp>\n  );\n};\n\nexport default ForgetPasswordPage;\n"]},"metadata":{},"sourceType":"module"}